[{"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/index.js":"1","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/App.js":"2","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/reportWebVitals.js":"3","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/GridManager.js":"4","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Builder/index.js":"5","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummyBuilder.js":"6","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummy.js":"7","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/history.js":"8","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/MeshCanvas.js":"9","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Preview/index.js":"10","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Comps/index.js":"11","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Gridder/index.js":"12","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/hooks/useEffectOnce.js":"13","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Uploader/index.js":"14","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/CenteredItem/index.js":"15","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Downloader/index.js":"16"},{"size":565,"mtime":1613940995209,"results":"17","hashOfConfig":"18"},{"size":8336,"mtime":1617591497481,"results":"19","hashOfConfig":"18"},{"size":333,"mtime":1613941213234,"results":"20","hashOfConfig":"18"},{"size":7474,"mtime":1613940995205,"results":"21","hashOfConfig":"18"},{"size":12491,"mtime":1613940995222,"results":"22","hashOfConfig":"18"},{"size":2175,"mtime":1617573579785,"results":"23","hashOfConfig":"18"},{"size":1948,"mtime":1617573587713,"results":"24","hashOfConfig":"18"},{"size":86,"mtime":1613941213232,"results":"25","hashOfConfig":"18"},{"size":6650,"mtime":1613940995205,"results":"26","hashOfConfig":"18"},{"size":4362,"mtime":1617591407768,"results":"27","hashOfConfig":"18"},{"size":2286,"mtime":1613940995064,"results":"28","hashOfConfig":"18"},{"size":3233,"mtime":1617578896711,"results":"29","hashOfConfig":"18"},{"size":237,"mtime":1613940995076,"results":"30","hashOfConfig":"18"},{"size":7416,"mtime":1617578663654,"results":"31","hashOfConfig":"18"},{"size":388,"mtime":1617576052462,"results":"32","hashOfConfig":"18"},{"size":6241,"mtime":1617591741366,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"d7yw81",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/index.js",[],["68","69"],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/App.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/reportWebVitals.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/GridManager.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Builder/index.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummyBuilder.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummy.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/history.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/MeshCanvas.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Preview/index.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Comps/index.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Gridder/index.js",["70"],"import React, { useEffect, useRef, useState } from \"react\"\nimport { traverseTwoPhase } from \"react-dom/test-utils\"\nimport useEffectOnce from \"../../hooks/useEffectOnce\"\n\nimport \"./style.scss\"\n\nconst Gridder = React.forwardRef((props, ref) => {\n  const images = useRef([])\n  const holder = useRef()\n  const amount = 32\n\n  const [bitmapData, setBitmapData] = useState([\"294x971\"]) //, \"297x974\", \"287x940\", \"728x1188\"])\n  const [status, setStatus] = useState(\"canvas\")\n\n  useEffectOnce(() => {\n    const images = bitmapData.map(dimensions => {\n      let [width, height] = dimensions.split(\"x\")\n\n      const canvas = document.createElement(\"canvas\")\n      canvas.width = width\n      canvas.height = height\n      const c = canvas.getContext(\"2d\")\n\n      width = canvas.width / amount\n      height = canvas.height / amount\n\n      let x = 0\n      let y = 0\n\n      function getColor(i) {\n        if (amount === 32) {\n          if (i % 4 === 0) {\n            c.strokeStyle = \"rgb(255, 255, 0)\"\n          } else if (i % 2 === 0) {\n            c.strokeStyle = \"rgb(0, 128, 255)\"\n          } else {\n            c.strokeStyle = \"rgb(128, 0, 0)\"\n          }\n        }\n      }\n\n      function makePath(i, x1, x2, y1, y2) {\n        // x1 = Math.round(x1)\n        // x2 = Math.round(x2)\n        // y1 = Math.round(y1)\n        // y2 = Math.round(y2)\n        c.beginPath()\n        getColor(i)\n        c.moveTo(x1, y1)\n        c.lineTo(x2, y2)\n        c.stroke()\n        c.closePath()\n      }\n\n      // VERTICAL LINES\n      c.lineWidth = 1\n      for (let i = 0; i < amount; i++) {\n        makePath(i, x, x, 0, canvas.height)\n        x += width\n      }\n\n      // HORIZONTAL LINES\n      // c.lineWidth = 4\n      for (let i = 0; i < amount; i++) {\n        makePath(i, 0, canvas.width, y, y)\n        y += height\n      }\n\n      // DO THE BORDER, WHICH MAY GET CROPPED SO LINE THICKNESS MUST DOUBLE\n      c.strokeStyle = \"rgb(255, 255, 0)\"\n      c.beginPath()\n      c.moveTo(0, 0)\n      c.lineTo(canvas.width, 0)\n      c.lineTo(canvas.width, canvas.height)\n      c.lineTo(0, canvas.height)\n      c.lineTo(0, 0)\n      c.lineWidth *= 2\n\n      c.stroke()\n      c.closePath()\n\n      return canvas.toDataURL(\"image/png\")\n    })\n\n    setBitmapData(images)\n    setStatus(\"image\")\n  })\n\n  useEffect(() => {\n    if (status === \"image\") {\n      let i = 0\n      const images = []\n      function loadImage(i) {\n        var img = new Image()\n        img.src = bitmapData[i]\n\n        img.onload = function() {\n          images.push(img.src)\n          if (i < bitmapData.length - 1) {\n            loadImage(++i)\n          } else {\n            setBitmapData(images)\n            setStatus(\"done\")\n          }\n        }\n      }\n      loadImage(0)\n    }\n    // else if (status === \"done\") {\n    //   while (holder.current.childNodes.length) holder.current.removeChild(holder.current.childNodes[0])\n    //   bitmapData.forEach((img, i) => {\n    //     holder.current.appendChild(img)\n    //   })\n    // }\n  }, [status])\n\n  return (\n    <div className=\"gridder\">\n      {status !== \"done\" ? (\n        <p>Loading.</p>\n      ) : (\n        bitmapData.map((src, i) => {\n          return <img src={src} key={`img_${i}`} />\n        })\n      )}\n    </div>\n  )\n})\n\nexport default Gridder\n","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/hooks/useEffectOnce.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Uploader/index.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/CenteredItem/index.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Downloader/index.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":123,"column":18,"nodeType":"77","endLine":123,"endColumn":52},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]