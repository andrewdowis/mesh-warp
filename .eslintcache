[{"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/index.js":"1","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/App.js":"2","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/reportWebVitals.js":"3","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/GridManager.js":"4","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Builder/index.js":"5","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummyBuilder.js":"6","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummy.js":"7","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/history.js":"8","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/MeshCanvas.js":"9","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Preview/index.js":"10","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Gridder/index.js":"11","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/hooks/useEffectOnce.js":"12","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Comps/index.js":"13"},{"size":565,"mtime":1613714925265,"results":"14","hashOfConfig":"15"},{"size":7899,"mtime":1613869673647,"results":"16","hashOfConfig":"15"},{"size":333,"mtime":1608258588834,"results":"17","hashOfConfig":"15"},{"size":7474,"mtime":1613869584840,"results":"18","hashOfConfig":"15"},{"size":12392,"mtime":1613869290057,"results":"19","hashOfConfig":"15"},{"size":2175,"mtime":1613858406208,"results":"20","hashOfConfig":"15"},{"size":1948,"mtime":1613859424508,"results":"21","hashOfConfig":"15"},{"size":86,"mtime":1612075671517,"results":"22","hashOfConfig":"15"},{"size":6573,"mtime":1613866279821,"results":"23","hashOfConfig":"15"},{"size":4356,"mtime":1613859216327,"results":"24","hashOfConfig":"15"},{"size":2602,"mtime":1613855820320,"results":"25","hashOfConfig":"15"},{"size":237,"mtime":1608254265169,"results":"26","hashOfConfig":"15"},{"size":2286,"mtime":1613714647237,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"d7yw81",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/index.js",[],["56","57"],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/App.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/reportWebVitals.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/GridManager.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Builder/index.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummyBuilder.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/CanvasDummy.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/history.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/lib/MeshCanvas.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Preview/index.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Gridder/index.js",["58"],"import React, { useEffect, useRef, useState } from \"react\"\nimport { traverseTwoPhase } from \"react-dom/test-utils\"\nimport useEffectOnce from \"../../hooks/useEffectOnce\"\n\nimport \"./style.scss\"\n\nconst Gridder = React.forwardRef((props, ref) => {\n  const images = useRef([])\n  const holder = useRef()\n  const amount = 64\n\n  const [bitmapData, setBitmapData] = useState([\"294x971\", \"297x974\", \"287x940\"])\n  const [status, setStatus] = useState(\"canvas\")\n\n  useEffectOnce(() => {\n    const images = bitmapData.map(dimensions => {\n      let [width, height] = dimensions.split(\"x\")\n\n      const canvas = document.createElement(\"canvas\")\n      canvas.width = width\n      canvas.height = height\n      const c = canvas.getContext(\"2d\")\n\n      let total = Math.pow(amount, 2)\n      width = canvas.width / amount\n      height = canvas.height / amount\n\n      let x = 0\n      let y = 0\n\n      c.beginPath()\n\n      c.lineWidth = 1\n      c.strokeStyle = \"white\"\n\n      for (let i = 0; i < total; i++) {\n        c.moveTo(x, y)\n        c.lineTo(x + width, y)\n        c.lineTo(x + width, y + height)\n        c.lineTo(x, y + height)\n        c.lineTo(x, y)\n\n        x += width\n\n        if (x >= canvas.width) {\n          x = 0\n          y += height\n        }\n      }\n      c.stroke()\n      c.closePath()\n\n      c.beginPath()\n      c.moveTo(0, 0)\n      c.lineTo(canvas.width, 0)\n      c.lineTo(canvas.width, canvas.height)\n      c.lineTo(0, canvas.height)\n      c.lineTo(0, 0)\n      c.lineWidth *= 2\n\n      c.stroke()\n      c.closePath()\n\n      return canvas.toDataURL(\"image/png\")\n    })\n\n    setBitmapData(images)\n    setStatus(\"image\")\n  })\n\n  useEffect(() => {\n    if (status === \"image\") {\n      let i = 0\n      const images = []\n      function loadImage(i) {\n        var img = new Image()\n        img.src = bitmapData[i]\n\n        img.onload = function() {\n          images.push(img.src)\n          if (i < bitmapData.length - 1) {\n            loadImage(++i)\n          } else {\n            setBitmapData(images)\n            setStatus(\"done\")\n          }\n        }\n      }\n      loadImage(0)\n    }\n    // else if (status === \"done\") {\n    //   while (holder.current.childNodes.length) holder.current.removeChild(holder.current.childNodes[0])\n    //   bitmapData.forEach((img, i) => {\n    //     holder.current.appendChild(img)\n    //   })\n    // }\n  }, [status])\n\n  return (\n    <div className=\"gridder\">\n      {status !== \"done\" ? (\n        <p>Loading.</p>\n      ) : (\n        bitmapData.map((src, i) => {\n          return <img src={src} key={`img_${i}`} />\n        })\n      )}\n    </div>\n  )\n})\n\nexport default Gridder\n","/Users/andrewdowis/Documents/_DEV/mesh-warp/src/hooks/useEffectOnce.js",[],"/Users/andrewdowis/Documents/_DEV/mesh-warp/src/components/Comps/index.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":105,"column":18,"nodeType":"65","endLine":105,"endColumn":52},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]